using ArtNetSharp;
using RDMSharp;

namespace ArtNetTests.ReportedBugs
{
    public class MarioBock_Berlin
    {
        [Test]
        public void TestCR011R_MaleformedArtPollReply()
        {
            byte[] data = {
                    0x41, 0x72, 0x74, 0x2d, 0x4e, 0x65, 0x74, 0x00, 0x00, 0x21, 0x0a, 0xc9, 0x06, 0x64, 0x36, 0x19,
                    0x00, 0x0e, 0x00, 0x00, 0x00, 0x22, 0x00, 0x31, 0x7a, 0x70, 0x43, 0x52, 0x30, 0x31, 0x31, 0x52,
                    0x5f, 0x30, 0x30, 0x31, 0x00, 0x00, 0x5c, 0x01, 0x00, 0x20, 0x70, 0xb5, 0x43, 0x52, 0x30, 0x31,
                    0x31, 0x52, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x30, 0x31,
                    0x20, 0x5b, 0x30, 0x32, 0x32, 0x30, 0x5d, 0x20, 0x41, 0x72, 0x74, 0x4e, 0x65, 0x74, 0x00, 0x31,
                    0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31,
                    0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31,
                    0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x00, 0x01, 0x80, 0x31,
                    0x31, 0x31, 0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x31, 0x31, 0x31, 0x00, 0x31,
                    0x31, 0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x4d, 0x48, 0xc9, 0x06, 0x64, 0x0a,
                    0xc9, 0x06, 0x64, 0x01, 0x08, 0x31 };
            ArtPollReply? artPollReply = null;
            Assert.DoesNotThrow(() => artPollReply = new ArtPollReply(data));
            Assert.That(artPollReply, Is.Not.Null);
            Assert.That(artPollReply.LongName, Is.EqualTo("CR011R"));
            Assert.That(artPollReply.ShortName, Is.EqualTo("CR011R_001"));
            Assert.That(artPollReply.MAC, Is.EqualTo(new MACAddress("02:4d:48:c9:06:64")));
            Assert.That(artPollReply.PortTypes, Has.Length.EqualTo(1));
            Assert.That(artPollReply.PortTypes[0], Is.EqualTo(EPortType.OutputFromArtNet));
            Assert.That(artPollReply.OutputUniverses, Has.Length.EqualTo(1));
            Assert.That(artPollReply.OutputUniverses[0], Is.EqualTo((Universe)0));
            Assert.That(artPollReply.InputUniverses, Has.Length.EqualTo(1));
            Assert.That(artPollReply.InputUniverses[0], Is.EqualTo((Universe)0));
            Assert.That(artPollReply.GoodOutput, Has.Length.EqualTo(1));
            Assert.That(artPollReply.GoodInput, Has.Length.EqualTo(1));
        }
    }
}