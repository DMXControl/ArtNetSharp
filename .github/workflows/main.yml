name: Build & Test

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
        
jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        dotnet-version: [ '6.0.x', '7.0.x', '8.0.x' ]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4.1.1
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4
      with:
          dotnet-version: ${{ matrix.dotnet-version }}
    - name: Install dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --configuration Release --no-restore
    - name: Test
      run: |
        (${{ matrix.dotnet-version }} == "6.0.x" && dotnet test --framework net6.0 --no-restore --verbosity normal --logger trx --results-directory "TestResults-${{ matrix.os }} ${{ matrix.dotnet-version }}") || (${{ matrix.dotnet-version }} == "7.0.x" && dotnet test --framework net7.0 --no-restore --verbosity normal --logger trx --results-directory "TestResults-${{ matrix.os }} ${{ matrix.dotnet-version }}") || (${{ matrix.dotnet-version }} == "8.0.x" && dotnet test --framework net8.0 --no-restore --verbosity normal --logger trx --results-directory "TestResults-${{ matrix.os }} ${{ matrix.dotnet-version }}")
      # run: |
      #   if ( "${{ matrix.dotnet-version }}" == "6.0.x" ); then
      #     dotnet test --framework net6.0 --no-restore --verbosity normal --logger trx --results-directory "TestResults-${{ matrix.os }} ${{ matrix.dotnet-version }}"
      #   elif ( "${{ matrix.dotnet-version }}" == "7.0.x" ); then
      #     dotnet test --framework net7.0 --no-restore --verbosity normal --logger trx --results-directory "TestResults-${{ matrix.os }} ${{ matrix.dotnet-version }}"
      #   elif ( "${{ matrix.dotnet-version }}" == "8.0.x" ); then
      #     dotnet test --framework net8.0 --no-restore --verbosity normal --logger trx --results-directory "TestResults-${{ matrix.os }} ${{ matrix.dotnet-version }}"
      #   fi        
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.3.1
      with:
        name: ${{ matrix.os }} ${{ matrix.dotnet-version }}
        path: |
          TestResults-${{ matrix.os }} ${{ matrix.dotnet-version }}
          ArtNetSharp/bin/Release/**/ArtNetSharp.dll
        retention-days: 2
      continue-on-error: true

